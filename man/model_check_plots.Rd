% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_check_plots.R
\name{model_check_plots}
\alias{model_check_plots}
\title{Plots for checking model assumptions}
\usage{
model_check_plots(
  model,
  glm.predict = "response",
  glm.resid = "deviance",
  smooth_method = "loess",
  ...
)
}
\arguments{
\item{model}{\code{lm}, \code{glm}, or \code{merMod} object.}

\item{glm.predict}{type of predictions to use when model is a \code{glm} object.
Can be "response" or "link", but only "response" is currently used for outputs.}

\item{glm.resid}{type of residuals to use when model is a \code{glm} or \code{glmerMod} object.
Can be "deviance", "pearson", "working", "response", or "partial".}

\item{smooth_method}{method of smoothing, which is passed to \code{\link[ggplot2]{geom_smooth}}. Default is "loess".}

\item{...}{additional arguments passed to \code{\link[ggplot2]{geom_smooth}}.}
}
\value{
a list object
}
\description{
Produces plots via \code{ggplot2} to examine the fit of single or
two-level linear or logistic regression models
}
\details{
Currently accepts linear models from \code{\link[stats]lm}} or \code{\link[lme4]{lmer}
or logistic models from \code{\link[stats]{glm}} or \code{\link[lme4]{glmer}}.
Linear models output a Q-Q plot of raw residuals and scatterplot of fitted and raw
residual values to examine normality and homoscedasticity assumptions, respectively.
Logistic models output a scatterplot of residuals grouped by binary outcome to examine
homoscedasticity. Additionally, a ROC analysis and plot of the ROC curve,
along with area under the curve estimate, demonstrates the discrimination of the
logistic model. All models produce a plot of Cook's distance for each observation.
Two-level models from \code{lme4} also output a scatterplot of level 1 and level 2
residuals to evaluate their correlation and, for linear models,
a Q-Q plot of the level 2 residuals (i.e., random intercept estimates).
}
\examples{
## OLS
data(sleepstudy, package = "lme4")
lm.mod <- lm(Reaction ~ Days, data = sleepstudy)
lm.plots <- model_check_plots(lm.mod, se = FALSE, color = "black")

## Two-level logistic regression
data(grouseticks, package = "lme4")
grouseticks$TICKS01 <- ifelse(grouseticks$TICKS > 0, 1, 0)

glmer.mod <- lme4::glmer(TICKS01 ~ YEAR + cHEIGHT + (1|LOCATION),
family = binomial(link = "logit"), data = grouseticks)
glmer.plots <- model_check_plots(glmer.mod, glm.predict = "response", glm.resid = "deviance")

}
