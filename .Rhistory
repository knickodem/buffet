roxygen2::roxygenize()
roxygen2::roxygenize()
library(buffet)
?model_check_plots
?get_lavaan_fits
roxygen2::roxygenize()
roxygen2::roxygenize()
library(buffet)
?Shannon_Index
?get_lavaan_fits
roxygen2::roxygenize()
roxygen2::roxygenize()
roxygen2::roxygenize()
roxygen2::roxygenize()
roxygen2::roxygenize()
roxygen2::roxygenize()
library(buffet)
?sum
head(mtcars)
data()
head(ability.cov)
df <- data.frame(x1 = sample(0:4, 20, replace = TRUE),
x2 = sample(0:4, 20, replace = TRUE),
x3 = sample(0:4, 20, replace = TRUE),
x4 = sample(0:4, 20, replace = TRUE))
sum.score <- scale_score(df, paste0("x", 1:4), type = "sum")
}
sum.score <- scale_score(df, paste0("x", 1:4), type = "sum")
#' dfmiss <- as.data.frame(dfmiss)
#'
#' # count number of items with a response
#' count.score <- scale_score(dfmiss, paste("x", 1:4), type = "count", na.rm = TRUE)
#'
#' # Only score NA if NA for all items
#' mean.score <- scale_score(df, paste0("x", 1:4), type = "mean",
#'                           na.rm = TRUE, all.na.missing = TRUE)
#'
#' @export
scale_score <- function(df, items,
type = c("sum","count","mean"),
na.rm = FALSE, all.na.missing = FALSE){
if(type %in% c("sum", "mean")){
s <- rowSums(df[items], na.rm = na.rm)
score <- s
} else if(type %in% c("count", "mean")){
c <- rowSums(!is.na(df[items]), na.rm = na.rm)
score <- c
}
if(type == "mean"){
score <- s / c
}
if(na.rm == TRUE & all.na.missing == TRUE){
nacount <- rowSums(is.na(df[items]), na.rm = TRUE)
score <- ifelse(nacount == length(items), NA, score)
}
return(score)
}
df <- data.frame(x1 = sample(0:4, 20, replace = TRUE),
x2 = sample(0:4, 20, replace = TRUE),
x3 = sample(0:4, 20, replace = TRUE),
x4 = sample(0:4, 20, replace = TRUE))
sum.score <- scale_score(df, paste0("x", 1:4), type = "sum")
## Incorporate missing data
dfmiss <- apply(df, 2, function(x){
x[sample(c(1:nrow(df)), floor(nrow(df)/10))] <- NA
x})
dfmiss <- as.data.frame(dfmiss)
# count number of items with a response
count.score <- scale_score(dfmiss, paste("x", 1:4), type = "count", na.rm = TRUE)
View(dfmiss)
# count number of items with a response
count.score <- scale_score(df = dfmiss, items = paste("x", 1:4),
type = "count", na.rm = TRUE)
# count number of items with a response
count.score <- scale_score(df = df, items = paste("x", 1:4),
type = "count", na.rm = TRUE)
# Only score NA if NA for all items
mean.score <- scale_score(dfmiss, paste0("x", 1:4), type = "mean",
na.rm = TRUE, all.na.missing = TRUE)
# Only score NA if NA for all items
mean.score <- scale_score(dfmiss, paste0("x", 1:4), type = "mean",
na.rm = TRUE, all.na.missing = FALSE)
paste0("x", 1:4)
# count number of items with a response
count.score <- scale_score(df = df, items = paste("x", 1:4),
type = "sum", na.rm = TRUE)
# count number of items with a response
count.score <- scale_score(df = df, items = paste("x", 1:4),
type = "sum", na.rm = FALSE)
# count number of items with a response
count.score <- scale_score(df = df, items = paste0("x", 1:4),
type = "count", na.rm = TRUE)
# Only score NA if NA for all items
mean.score <- scale_score(dfmiss, paste0("x", 1:4), type = "mean",
na.rm = TRUE, all.na.missing = FALSE)
# count number of items with a response
count.score <- scale_score(dfmiss, paste0("x", 1:4), type = "count", na.rm = TRUE)
count.score
dfmiss
sum.score
test <- scale_score(dfmiss, paste0("x", 1:4), type = "sum", na.rm = TRUE)
test
test / count.score
# only score NA if NA for all items
mean.score <- scale_score(dfmiss, paste0("x", 1:4), type = "mean",
na.rm = FALSE, all.na.missing = FALSE)
rowSums(is.na(dfmiss[paste0("x", 1:4)]), na.rm = TRUE)
t2 <- rowSums(is.na(dfmiss[paste0("x", 1:4)]), na.rm = TRUE)
# only score NA if NA for all items
mean.score <- scale_score(dfmiss, paste0("x", 1:4), type = "mean",
na.rm = FALSE, all.na.missing = FALSE)
s <- rowSums(dfmiss[paste0("x", 1:4)], na.rm = TRUE)
s <- rowSums(dfmiss[paste0("x", 1:4)], na.rm = TRUE)
c <- rowSums(!is.na(dfmiss[paste0("x", 1:4)]), na.rm = TRUE)
s/c
nc <- rowSums(is.na(dfmiss[paste0("x", 1:4)]), na.rm = TRUE)
nc
sc <- s/c
sc <- ifelse(nc == length(items), NA, sc)
sc <- ifelse(nc == length(paste0("x", 1:4)), NA, sc)
na.rm = FALSE, all.na.missing = FALSE){
scale_score <- function(df, items,
type = c("sum","count","mean"),
na.rm = FALSE, all.na.missing = FALSE){
if(type %in% c("sum", "mean")){
s <- rowSums(df[items], na.rm = na.rm)
score <- s
} else if(type %in% c("count", "mean")){
c <- rowSums(!is.na(df[items]), na.rm = na.rm)
score <- c
}
if(type == "mean"){
score <- s / c
}
if(na.rm == TRUE & all.na.missing == TRUE){
nacount <- rowSums(is.na(df[items]), na.rm = TRUE)
score <- ifelse(nacount == length(items), NA, score)
}
return(score)
}
df <- data.frame(x1 = sample(0:4, 20, replace = TRUE),
x2 = sample(0:4, 20, replace = TRUE),
x3 = sample(0:4, 20, replace = TRUE),
x4 = sample(0:4, 20, replace = TRUE))
sum.score <- scale_score(df, paste0("x", 1:4), type = "sum")
## Incorporate missing data
dfmiss <- apply(df, 2, function(x){
x[sample(c(1:nrow(df)), floor(nrow(df)/10))] <- NA
x})
dfmiss <- as.data.frame(dfmiss)
# count number of items with a response
count.score <- scale_score(dfmiss, paste0("x", 1:4), type = "count", na.rm = TRUE)
test <- scale_score(dfmiss, paste0("x", 1:4), type = "sum", na.rm = TRUE)
# only score NA if NA for all items
mean.score <- scale_score(dfmiss, paste0("x", 1:4), type = "mean",
na.rm = FALSE, all.na.missing = FALSE)
s <- rowSums(dfmiss[paste0("x", 1:4)], na.rm = TRUE)
c <- rowSums(!is.na(dfmiss[paste0("x", 1:4)]), na.rm = TRUE)
sc <- s/c
it <- paste0("x", 1:4)
dfmiss[it]
dfmiss[[it]]
dfmiss[[c(it)]]
nc <- rowSums(is.na(dfmiss[paste0("x", 1:4)]), na.rm = TRUE)
sc <- ifelse(nc == length(paste0("x", 1:4)), NA, sc)
dfmiss[, it]
}
scale_score <- function(df, items,
type = c("sum","count","mean"),
na.rm = FALSE, all.na.missing = FALSE){
if(type %in% c("sum", "mean")){
s <- rowSums(df[,items], na.rm = na.rm)
score <- s
} else if(type %in% c("count", "mean")){
c <- rowSums(!is.na(df[,items]), na.rm = na.rm)
score <- c
}
if(type == "mean"){
score <- s / c
}
if(na.rm == TRUE & all.na.missing == TRUE){
nacount <- rowSums(is.na(df[,items]), na.rm = TRUE)
score <- ifelse(nacount == length(items), NA, score)
}
return(score)
}
# only score NA if NA for all items
mean.score <- scale_score(dfmiss, paste0("x", 1:4), type = "mean",
na.rm = TRUE, all.na.missing = TRUE)
